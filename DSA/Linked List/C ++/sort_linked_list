class Solution {
public:
    ListNode *merge(ListNode *l, ListNode *r)
    {
        if(l==NULL)
            return r;
        if(r==NULL)
            return l;
        ListNode *result;
        
        if(l->val > r->val)
        {
            result = r;
            result->next = merge(l,r->next);
        }else
        {
            result = l;
            result->next = merge(l->next,r);
        }
        
        return result;
    }

    ListNode* sortList(ListNode* head)
    {
        if(head==NULL || head->next==NULL)
            return head;
        ListNode *fast,*slow;
        
        fast = slow = head;
        fast = fast->next->next;
        while(fast && fast->next)
        {
            slow = slow->next;
            fast = fast->next->next;
        }
        
        ListNode *head1 = head;
        ListNode *head2 = slow->next;
        slow->next = NULL;
        
        head1 = sortList(head1);
        head2 = sortList(head2);

        return merge(head1,head2);
    }
};
